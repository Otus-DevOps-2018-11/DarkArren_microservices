image: ruby:2.4.2

stages:
  - build
  - test
  - review
  - stage
  - production

variables:
  DATABASE_URL: 'mongodb://mongo/user_posts'

before_script:
  - echo 'Before script'
  # - cd reddit
  # - bundle install

build_job:
  image: docker:dind
  stage: build
  script:
    - echo 'Building'
    - docker login -u darkarren -p $docker_hub_password
    - docker build -t gitlab-reddit:latest ./reddit
    - docker tag gitlab-reddit:latest darkarren/otus-reddit:2.0
    - docker push darkarren/otus-reddit:2.0

test_unit_job:
  stage: test
  services:
    - mongo:latest
  script:
    - cd reddit
    - bundle install
    - ruby simpletest.rb

test_integration_job:
  stage: test
  script:
    - echo 'Testing 2'

deploy_dev_job:
  stage: review
  script:
    - echo 'Deploy'
  environment:
    name: dev
    url: http://dev.example.com

branch review:
  stage: review
  script: 
    - echo "Install Google Cloud SDK"
    # Create environment variable for correct distribution
    - export CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)"
    # Add the Cloud SDK distribution URI as a package source
    - echo "deb http://packages.cloud.google.com/apt $CLOUD_SDK_REPO main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
    # Import the Google Cloud Platform public key
    - curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
    # Update the package list and install the Cloud SDK
    - sudo apt-get update && sudo apt-get install google-cloud-sdk
    - gcloud --version

    - echo "Deploy to $CI_ENVIRONMENT_SLUG"
  environment:
    name: branch/$CI_COMMIT_REF_NAME
    url: http://$CI_ENVIRONMENT_SLUG.example.com
  only:
    - branches
  except:
    - master

staging:
  stage: stage
  when: manual
  only:
    - /^\d+\.\d+\.\d+/
  script:
    - echo 'Deploy'
  environment:
    name: stage
    url: https://beta.example.com

production:
  stage: production
  when: manual
  only:
    - /^\d+\.\d+\.\d+/
  script:
    - echo 'Deploy'
  environment:
    name: production
    url: https://example.com
